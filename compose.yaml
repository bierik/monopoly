services:
  ingress:
    build:
      context: ingress
      dockerfile: Dockerfile
    ports:
      - 5000:80
    environment:
      - GAMEMASTER_UPSTREAM=gamemaster:8000
    profiles: [dev]

  test-ingress:
    build:
      context: ingress
      dockerfile: Dockerfile
    ports:
      - 10000:80
    environment:
      - GAMEMASTER_UPSTREAM=host.docker.internal:50000
    profiles: [test]

  mosquitto:
    image: eclipse-mosquitto:2.0.21
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    ports:
      - 1883:1883
    profiles: [dev, test]

  board:
    build:
      context: board
      dockerfile: Dockerfile
    volumes:
      - ./board:/app/board
      - ./common:/app/common
      - /app/board/node_modules
    profiles: [dev, test]

  gamemaster:
    build:
      context: gamemaster
      dockerfile: Dockerfile
    volumes:
      - ./gamemaster:/app
    environment:
      DJANGO_DATABASE_PASSWORD: postgres
      DJANGO_DATABASE_HOST: db
      DJANGO_DATABASE_USER: postgres
      PARTICIPATIONS: 2
    stdin_open: true
    tty: true
    profiles: [dev, test]

  player:
    build:
      context: player
      dockerfile: Dockerfile
    volumes:
      - ./player:/app/player
      - ./common:/app/common
      - /app/player/node_modules
    profiles: [dev, test]

  db:
    image: postgres:17.4-alpine3.21
    volumes:
      - ./var/data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    profiles: [dev]

  test-db:
    image: postgres:17.4-alpine3.21
    ports:
      - 20000:5432
    command: postgres --fsync=off --synchronous-commit=off --full-page-writes=off
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    profiles: [test]
    tmpfs:
      - /var/lib/postgresql
